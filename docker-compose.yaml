version: "3"

services:
  spark-iceberg:
    build: spark/
    image: custom-spark-iceberg
    container_name: spark-iceberg
    networks:
      - iceberg_net
    depends_on:
      - rest
      - minio
      - nessie
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1

      # Iceberg REST catalog (optional)
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

      # Nessie catalog config (optional, use in notebooks or spark-defaults.conf)
      - CATALOG_NESSIE_TYPE=iceberg
      - CATALOG_NESSIE_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_NESSIE_WAREHOUSE=s3://warehouse/
      - CATALOG_NESSIE_CATALOG__IMPL=org.apache.iceberg.nessie.NessieCatalog
      - CATALOG_NESSIE_URI=http://nessie:19120/api/v1
      - CATALOG_NESSIE_REF=main

      # JARs to load Iceberg + Nessie + Hadoop S3
      - SPARK_JARS_PACKAGES=org.apache.hadoop:hadoop-aws:3.3.2,org.apache.iceberg:iceberg-spark-runtime-3.5_2.12:1.9.0,org.projectnessie.nessie-integrations:nessie-spark-extensions-3.5_2.12:0.103.3
      # Add Nessie extension to Spark's SQL extensions
      - SPARK_SQL_EXTENSIONS=org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions,org.projectnessie.spark.extensions.NessieSparkSessionExtensions
      - SPARK_DRIVER_CLASS_PATH=/opt/spark/jars/nessie-spark-extensions-3.5_2.12-0.103.3.jar:/opt/spark/jars/iceberg-spark-runtime-3.5_2.12-1.9.0.jar:/opt/spark/jars/hadoop-aws-3.3.2.jar:/opt/spark/jars/aws-java-sdk-bundle-1.11.901.jar

    ports:
      - 8888:8888  # Jupyter Notebook
      - 8080:8080
      - 10000:10000
      - 10001:10001

  rest:
    image: apache/iceberg-rest-fixture
    container_name: iceberg-rest
    networks:
      - iceberg_net
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  nessie:
    image: projectnessie/nessie
    container_name: nessie
    ports:
      - 19120:19120
    networks:
      - iceberg_net

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      - iceberg_net
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint:
      - /bin/sh
      - -c
      - |
        until (/usr/bin/mc config host add minio http://minio:9000 admin password); do 
          echo '...waiting...' && sleep 1; 
        done;
        /usr/bin/mc rm -r --force minio/warehouse;
        /usr/bin/mc mb minio/warehouse;
        /usr/bin/mc policy set public minio/warehouse;
        tail -f /dev/null

networks:
  iceberg_net:
